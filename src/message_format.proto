package game;

message Update {
	required int32 id = 1;
	optional bool quit = 2;
	optional bool end_turn = 3;

	enum GameWinState {
		IN_PROGRESS = 0;
		WON = 1;
		DRAW = 2;
	}

	optional GameWinState game_win_state = 4 [default = IN_PROGRESS];
	optional string winning_team_uuid = 5;
	
	optional string fail_reason = 6;

	message Location {
		required int32 x = 1;
		required int32 y = 2;
	}

	message UnitStats {
		optional int32 health = 1;
		optional int32 attack = 2;
		optional int32 armour = 3;
		optional float move = 4;
		optional float initiative = 5;
		optional string name = 6;
		optional int32 range = 7;
	}

	message AnimationHints {
		optional string hint = 1;
		optional int32 timing = 2;
	}

	message Unit {
		enum MessageType {
			CANONICAL_STATE = 0;
			SUMMON = 1;
			MOVE = 2;
			ATTACK = 3;
			SPELL = 4;
			PASS = 5;
		}
		required string uuid = 1;
		optional MessageType type = 2 [default = CANONICAL_STATE];
		optional string name = 3;
		optional string owner_uuid = 4;
		
		optional UnitStats stats = 5;

		repeated string target_uuids = 6;

		repeated Location path = 7;

		repeated AnimationHints animation_hints = 8;
	}

	message Player {
		enum Action {
			CANONICAL_STATE = 0;
			JOIN = 1;
			QUIT = 2;
			CONCEDE = 3;
		}

		required string uuid = 1;
		optional string name = 2;
		optional Action action = 3 [default = CANONICAL_STATE];
		
		optional string team_uuid = 4;
		optional string team_name = 5;
	}

	repeated Unit units = 7;

	repeated Player player = 8;
}
